openapi: 3.0.1
info:
  title: Greeter Microservice
  description: Microservice for greeting people
  contact:
    name: Marc Kohaupt
    url: http://debuglevel.de
  license:
    name: Unlicense
    url: https://unlicense.org/
  version: "0.1"
paths:
  /greetings:
    get:
      tags:
      - greetings
      summary: Gets some greetings.
      description: Gets some greetings.
      operationId: getAllGreetings
      responses:
        "200":
          description: Some greetings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
    post:
      tags:
      - greetings
      summary: Get a greeting for a person.
      description: "Get a greeting for a person. If given, the greeting is localized\
        \ in a language."
      operationId: postOneGreeting
      requestBody:
        content:
          application/json:
            schema:
              required:
              - greetingRequest
              type: object
              properties:
                greetingRequest:
                  $ref: '#/components/schemas/GreetingRequest'
        required: true
      responses:
        "200":
          description: A greeting for a person in a given language
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
  /greetings/{name}:
    get:
      tags:
      - greetings
      summary: Get a greeting for a person.
      description: "Get a greeting for a person. If given, the greeting is localized\
        \ in a language."
      operationId: getOneGreeting
      parameters:
      - name: name
        in: path
        description: Name of the person to greet
        required: true
        schema:
          type: string
      - name: language
        in: query
        description: The language to greet the person in
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: A greeting for a person in a given language
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
  /persons:
    get:
      tags:
      - persons
      summary: Get all persons
      description: Get all persons
      operationId: getAllPersons
      responses:
        "200":
          description: All persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPersonResponse'
    post:
      tags:
      - persons
      summary: Create a person.
      description: Create a person.
      operationId: postOnePerson
      requestBody:
        content:
          application/json:
            schema:
              required:
              - addPersonRequest
              type: object
              properties:
                addPersonRequest:
                  $ref: '#/components/schemas/AddPersonRequest'
        required: true
      responses:
        "200":
          description: A person with their ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPersonResponse'
    delete:
      tags:
      - persons
      summary: Delete all person.
      description: Delete all person.
      operationId: deleteAllPersons
      responses:
        "200":
          description: deleteAllPersons 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /persons/VIPs:
    get:
      tags:
      - persons
      summary: Get all VIPs
      description: Get all VIPs
      operationId: getVIPs
      responses:
        "200":
          description: All VIPs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPersonResponse'
  /persons/endlessRandom:
    get:
      tags:
      - persons
      summary: Download a never ending file of random names
      description: Download a never ending file of random names
      operationId: downloadRandomEndless
      responses:
        "200":
          description: downloadRandomEndless 200 response
          content:
            application/json:
              schema:
                type: string
                format: binary
  /persons/{id}:
    get:
      tags:
      - persons
      summary: Get a person
      description: Get a person
      operationId: getOnePerson
      parameters:
      - name: id
        in: path
        description: ID of the person
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: A person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonResponse'
    put:
      tags:
      - persons
      summary: Update a person.
      description: Update a person.
      operationId: putOnePerson
      parameters:
      - name: id
        in: path
        description: ID of the person
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
              - updatePersonRequest
              type: object
              properties:
                updatePersonRequest:
                  $ref: '#/components/schemas/UpdatePersonRequest'
        required: true
      responses:
        "200":
          description: The updated person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePersonResponse'
    delete:
      tags:
      - persons
      summary: Delete a person.
      description: Delete a person.
      operationId: deleteOnePerson
      parameters:
      - name: id
        in: path
        description: ID of the person
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: deleteOnePerson 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
components:
  schemas:
    AddPersonRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    AddPersonResponse:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    GetPersonResponse:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Greeting:
      required:
      - greeting
      type: object
      properties:
        greeting:
          type: string
          description: Greeting for the given person
      description: A greeting
    GreetingRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        language:
          type: string
          nullable: true
    Unit:
      type: object
    UpdatePersonRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    UpdatePersonResponse:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
